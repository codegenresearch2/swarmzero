import os\\nfrom datetime import datetime, timezone\\\\nfrom typing import Any, List, Optional\\\\nfrom llama_index.core.agent.runner.base import AgentRunner\\\\nfrom llama_index.core.llms import ChatMessage, MessageRole\\\\nfrom llama_index.core.memory import ChatMemoryBuffer\\\\nfrom llama_index.core.schema import ImageDocument\\\\nfrom swarmzero.database.database import DatabaseManager\\\\nfrom swarmzero.filestore import BASE_DIR, FileStore\\\\nfile_store = FileStore(BASE_DIR)\\\n\\\\nclass ChatManager:\\\\n    def __init__(self, llm: AgentRunner, user_id: str, session_id: str, enable_multi_modal: bool = False):\\\\\\n        self.llm = llm\\\\\n        self.user_id = user_id\\\\\n        self.session_id = session_id\\\\\n        self.chat_store_key = f"{user_id}_{session_id}"\\\\\n        self.enable_multi_modal = enable_multi_modal\\\\\n    async def add_message(self, db_manager: DatabaseManager, role: str, content: Any | None):\\\\\n        data = {\\"user_id\": self.user_id,\\"session_id\": self.session_id,\\"message\": content,\\"role\": role,\\"timestamp\": datetime.now(timezone.utc).isoformat()}\\\\\n        if "AGENT_ID" in os.environ:\\\\\n            data["agent_id"] = os.getenv("AGENT_ID", "")\\\\\n        if "SWARM_ID" in os.environ:\\\\\n            data["swarm_id"] = os.getenv("SWARM_ID", "")\\\\\n        await db_manager.insert_data(\\"chats\", data=data)\\\\\n    async def get_messages(self, db_manager: DatabaseManager):\\\\\n        filters = {\\"user_id\": [self.user_id], \"session_id\": [self.session_id]}\\\\\n        if "AGENT_ID" in os.environ:\\\\\n            filters["agent_id"] = os.getenv("AGENT_ID", "")\\\\\n        if "SWARM_ID" in os.environ:\\\\\n            filters["swarm_id"] = os.getenv("SWARM_ID", "")\\\\\n        db_chat_history = await db_manager.read_data("chats", filters)\\\\\n        chat_history = [ChatMessage(role=chat["role"], content=chat["message"]) for chat in db_chat_history]\\\\\n        return chat_history\\\\\n    async def get_all_chats_for_user(self, db_manager: DatabaseManager):\\\\\n        filters = {\\"user_id\": [self.user_id]}\\\\\n        if "AGENT_ID" in os.environ:\\\\\n            filters["agent_id"] = os.getenv("AGENT_ID", "")\\\\\n        if "SWARM_ID" in os.environ:\\\\\n            filters["swarm_id"] = os.getenv("SWARM_ID", "")\\\\\n        db_chat_history = await db_manager.read_data("chats", filters)\\\\\n        chats_by_session: dict[str, list] = {}\\\\\n        for chat in db_chat_history:\\\\\n            session_id = chat["session_id"]\\\\\n            if session_id not in chats_by_session:\\\\\n                chats_by_session[session_id] = []\\\\\n            chats_by_session[session_id].append(\\\\\n                {\\\\